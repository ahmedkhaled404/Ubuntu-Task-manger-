/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package taskmanager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.*;

/**
 *
 * @author ahmed maher
 */
public class ProcessesManager extends javax.swing.JFrame {

    private Timer timer = null;
    private int pid;

    public ProcessesManager() {
        this("all", "ps ax o user,pid,%cpu,%mem,start,time,tty,stat,group,gid,comm");
    }

    public ProcessesManager(String user, String command) {
        initComponents();
        ActionListener task = (ActionEvent ae) -> {
            try {
                getTableIntialized(user, command);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        };

        timer = new Timer(250, task);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        memBar = new javax.swing.JProgressBar();
        cpuBar = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton_endtask = new javax.swing.JButton();
        jLabel_TaskName = new javax.swing.JLabel();
        CPU_usage = new javax.swing.JLabel();
        MEM_usage = new javax.swing.JLabel();
        jLabel_ProcessScreen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Process Manager");
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(250, 100));
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setSize(new java.awt.Dimension(1200, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable.setBackground(new java.awt.Color(0, 0, 0));
        jTable.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N
        jTable.setForeground(new java.awt.Color(51, 255, 51));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable);

        memBar.setForeground(new java.awt.Color(0, 51, 255));

        cpuBar.setForeground(new java.awt.Color(0, 51, 255));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel1.setText("CPU");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel2.setText("MEM");

        jButton_endtask.setText("End Task");
        jButton_endtask.setEnabled(false);
        jButton_endtask.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton_endtask.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton_endtask.setPreferredSize(new java.awt.Dimension(92, 18));
        jButton_endtask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_endtaskActionPerformed(evt);
            }
        });

        jLabel_TaskName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        CPU_usage.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N

        MEM_usage.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N

        jLabel_ProcessScreen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CPU_usage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cpuBar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MEM_usage, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memBar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_ProcessScreen, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_TaskName, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_endtask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel_TaskName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(CPU_usage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cpuBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MEM_usage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_endtask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_ProcessScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        try {
            int row_index = jTable.getSelectedRow();
            if (row_index > -1) {
                TableModel model = jTable.getModel();

                this.pid = Integer.parseInt(model.getValueAt(row_index, 1).toString());
                String group = model.getValueAt(row_index, 8).toString();
                String command = model.getValueAt(row_index, 10).toString();

                jButton_endtask.setEnabled(true);
                jLabel_TaskName.setText("[ " + group + " ]  " + command);
            }
        } catch (NumberFormatException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jTableMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        timer.stop();
        jButton_endtask.setEnabled(false);
    }//GEN-LAST:event_formWindowClosed

    private void jButton_endtaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_endtaskActionPerformed
        try {
            TaskManager.bash(TaskManagerGUI.rootCommand + "kill -9 " + this.pid);
            jButton_endtask.setEnabled(false);
            jLabel_TaskName.setText("");
        } catch (IOException ex) {
            Logger.getLogger(ProcessesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_endtaskActionPerformed

    private int getMemUsage() throws IOException {
        String[] freeCMD = TaskManager.strFormatter(TaskManager.bashTerminal("free -m"));
        double totalMem = Double.parseDouble(freeCMD[1].split(" ")[1]);
        double usedMem = Double.parseDouble(freeCMD[1].split(" ")[2]);

        return (int) ((usedMem / totalMem) * 100);
    }

    private int getCPUUsage() throws IOException {
        double cpu = Double.parseDouble(TaskManager.strFormatter(TaskManager.bashTerminal("iostat -c"))[3].split(" ")[5]);
        return (int) (100 - cpu);
    }

    private void getTableIntialized(String user, String command) throws IOException {
        String[] lines = TaskManager.strFormatter(TaskManager.bashTerminal(command));
        int cpu = this.getCPUUsage();
        int mem = this.getMemUsage();

        String[] tableHeaders = lines[0].split(" ");
        int length = tableHeaders.length;

        boolean[] cell_editable = new boolean[length];
        for (int i = 0; i < length; i++) {
            cell_editable[i] = false;
        }

        jTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                tableHeaders
        ) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return cell_editable[columnIndex];
            }
        });

        DefaultTableModel model = (DefaultTableModel) jTable.getModel();
        for (int i = 1; i < lines.length; i++) {
            String[] row_values = lines[i].split(" ");
            if (user.equals("all") || user.equals(row_values[0])) {
                model.addRow(row_values);
            }
        }

        cpuBar.setValue(cpu);
        CPU_usage.setText(cpu + "%");

        memBar.setValue(mem);
        MEM_usage.setText(mem + "%");

        jLabel_ProcessScreen.setText("[ " + user + " ] has " + model.getRowCount() + " proccesses.");
        jTable.getColumnModel().getColumn(length - 1).setPreferredWidth(500);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessesManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProcessesManager().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CPU_usage;
    private javax.swing.JLabel MEM_usage;
    private javax.swing.JProgressBar cpuBar;
    private javax.swing.JButton jButton_endtask;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_ProcessScreen;
    private javax.swing.JLabel jLabel_TaskName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JProgressBar memBar;
    // End of variables declaration//GEN-END:variables
}
